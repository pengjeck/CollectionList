---
import { LinkCard, CardGrid } from "@astrojs/starlight/components";

class Catogery {
  cato: string = "";
  rows: string[] = [];
  constructor(cato: string) {
    this.cato = cato;
  }
}

const { url } = Astro.props;

const response = await fetch(url);
const data = await response.text();
let rows: string[] = [];
if (data != null && data != undefined) {
  rows = data.split("\n").splice(1);
}
let catos: Catogery[] = [];

rows.forEach((row) => {
  const parts = row.split(",");
  const cato = parts[0];
  if (catos.find((c) => c.cato == cato) == null) {
    catos.push(new Catogery(cato));
  }
  const cat = catos.find((c) => c.cato == cato);
  // @ts-ignore
  cat.rows.push(row);
});
---

<!-- <span>{catos}</span> -->{
  catos.map((cato: Catogery) => {
    return (
      <div>
        <h2>{cato.cato}</h2>
        <CardGrid>
          {cato.rows.map((row) => {
            const parts = row.split(",");
            return (
              <LinkCard
                title={parts[1]}
                href={parts[2]}
                description={parts[3].slice(0, 200)}
              />
            );
          })}
        </CardGrid>
      </div>
    );
  })
}
